import { task, watch<% if (antlr4) { %>, series<% } %> } from "gulp";
import path from "path";
import del from "del";
import { build } from "./build";
import { test } from "./test";<% if (jupyter) { %>
import { convertNotebooks } from "./notebooks";<% } %><% if (antlr4) { %>
import { makeParser, copyParser } from "./parse";<% } %>

const buildDir = "<%- buildDir %>";
const srcGlob = <%- srcGlob %>;
const buildGlob = <%- buildGlob %>;<% if (jupyter) { %>
const ipynbGlob = <%- ipynbGlob %>;<% } %><% if (antlr4) { %>
const grammarGlob = <%- grammarGlob %>;<% } %>

export const startWatching = done => {
  const watcher = watch(srcGlob, {events: ["add", "change"]}, build);

  watcher.on("unlink", file => {
    const buildFile = path.join(buildDir, file.replace(/(\.[\w]+)$/, ".js"));
    const mapFile = path.join(buildDir, file.replace(/(\.[\w]+)$/, ".js.map"));
    del(buildFile).catch(() => {});
    del(mapFile).catch(() => {});
  });

  watch(buildGlob, test);<% if (jupyter) { %>
  watch(ipynbGlob, convertNotebooks);<% } %><% if (antlr4) { %>
  watch(grammarGlob, series(makeParser, copyParser));<% } %>

  done();
};

task("watch", startWatching);
